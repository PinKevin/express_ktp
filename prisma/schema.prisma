generator client {
  provider      = "prisma-client-js"
  // binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"] //compute engine back end
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  username  String     @unique
  password  String
  role      Role
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  dosen     Dosen?
  mahasiswa Mahasiswa?
}

model Mahasiswa {
  nim         String      @id @unique
  nama        String
  alamat      String
  no_telp     String
  email       String
  jalur_masuk Jalur_Masuk
  status      Status
  user_id     String      @unique
  dosenId     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  irs         IRS[]
  dosen       Dosen       @relation(fields: [dosenId], references: [nip])
  user        User        @relation(fields: [user_id], references: [id])
}

model Dosen {
  nip       String      @id @unique
  nama      String
  alamat    String
  no_telp   String
  email     String
  user_id   String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [user_id], references: [id])
  mahasiswa Mahasiswa[]
}

model IRS {
  id           Int       @id @default(autoincrement())
  mahasiswa_id String
  semester     Int
  jumlah_sks   Int
  berkas_irs   String
  isVerified   Boolean
  nilai        Float
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  mahasiswa    Mahasiswa @relation(fields: [mahasiswa_id], references: [nim])
}

enum Role {
  Dosen
  Mahasiswa
  Program_Studi
  Fakultas
}

enum Jalur_Masuk {
  SNMPTN
  SBMPTN
  Mandiri
}

enum Status {
  Aktif
  Tidak_Aktif
  Cuti
  Lulus
}
